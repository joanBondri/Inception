##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

events {

}
http {
#	server {
#	
#	listen 8080;
#	
#	
#	server_name locahost;
#	
#	
#	return 301 https://localhost$request_uri;
#	
#	}

	server {
		server_name jbondri.42.fr www.jbondri.42.fr;
		listen 8080 ssl default_server;
		listen [::]:8080 ssl;
		ssl_certificate     cert.crt;
 		ssl_certificate_key key.key;
   		ssl_protocols       TLSv1.2 TLSv1.3;
 		ssl_ciphers         HIGH:!aNULL:!MD5;
		root /var/www/wordpress;
		index index.php index.html;
		error_log 			/var/www/error.log warn;
		location / {
			try_files $uri $uri/ =404;
		}
		location ~ \.php$ {
		    fastcgi_param REQUEST_METHOD $request_method;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_pass wordpress:9000;
			fastcgi_index index.php;
		}
	}
}
# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

